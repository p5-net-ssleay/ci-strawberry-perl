name: Build

on:
  push:
    branches:
      - master

jobs:
  update-releases:
    name: Update GitHub releases
    runs-on: ubuntu-latest
    steps:
      - name: Update GitHub releases
        uses: actions/github-script@v5
        with:
          script: |
            var releases = await github.paginate(
              github.rest.repos.listReleases,
              {
                owner: context.repo.owner,
                repo:  context.repo.repo,
              }
            );

            require("fs").writeFileSync("releases.gh", JSON.stringify(releases));

            for (const r of releases) {
              if (r.target_commitish == context.sha) {
                console.log(`Strawberry Perl ${r.tag_name} (release ${r.id}): target commit hash up-to-date`);
              } else {
                console.log(`Strawberry Perl ${r.tag_name} (release ${r.id}): updating target commit hash`);

                await github.rest.git.updateRef({
                  owner: context.repo.owner,
                  repo:  context.repo.repo,
                  ref:   `tags/${r.tag_name}`,
                  sha:   context.sha,
                  force: true,
                });

                await github.rest.repos.updateRelease({
                  owner:            context.repo.owner,
                  repo:             context.repo.repo,
                  release_id:       r.id,
                  target_commitish: context.sha,
                });
              }
            }

      - name: Upload GitHub releases response as artifact
        uses: actions/upload-artifact@v2
        with:
          name: github-releases
          path: releases.gh
          retention-days: 1

  build:
    name: 'Build Strawberry Perl ${{ matrix.version }} ${{ matrix.flavour }}'
    runs-on: windows-2022
    needs: update-releases
    strategy:
      fail-fast: false
      matrix:
        version:
          - '5.8.8.2'
          - '5.8.8.3'
          - '5.8.8.4'
          - '5.8.9.1'
          - '5.8.9.2'
          - '5.8.9.3'
          - '5.8.9.4'
          - '5.8.9.5'
          - '5.10.0.2'
          - '5.10.0.3'
          - '5.10.0.4'
          - '5.10.0.5'
          - '5.10.0.6'
          - '5.10.1.0'
          - '5.10.1.1'
          - '5.10.1.2'
          - '5.10.1.3'
          - '5.10.1.4'
          - '5.10.1.5'
          - '5.12.0.0'
          - '5.12.0.1'
          - '5.12.1.0'
          - '5.12.2.0'
          - '5.12.3.0'
          - '5.14.2.1'
          - '5.14.3.1'
          - '5.14.4.1'
          - '5.16.0.1'
          - '5.16.1.1'
          - '5.16.2.1'
          - '5.16.2.2'
          - '5.16.3.1'
          - '5.18.0.1'
          - '5.18.1.1'
          - '5.18.2.1'
          - '5.18.2.2'
          - '5.18.4.1'
          - '5.20.0.1'
          - '5.20.1.1'
          - '5.20.2.1'
          - '5.20.3.1'
          - '5.20.3.2'
          - '5.20.3.3'
          - '5.22.0.1'
          - '5.22.1.1'
          - '5.22.1.2'
          - '5.22.1.3'
          - '5.22.2.1'
          - '5.22.3.1'
          - '5.24.0.1'
          - '5.24.1.1'
          - '5.24.2.1'
          - '5.24.3.1'
          - '5.24.4.1'
          - '5.26.0.1'
          - '5.26.0.2'
          - '5.26.1.1'
          - '5.26.2.1'
          - '5.26.3.1'
          - '5.28.0.1'
          - '5.28.1.1'
          - '5.28.2.1'
          - '5.30.0.1'
          - '5.30.1.1'
          - '5.30.2.1'
          - '5.30.3.1'
          - '5.32.0.1'
          - '5.32.1.1'
        flavour:
          # 64bit
          - x64
          # 32bit / with USE_64_BIT_INT
          - x86_64bitint
          # 32bit / without USE_64_BIT_INT
          - x86_no64bitint
        exclude:
          # 32bit / without USE_64_BIT_INT flavour is not available for versions 5.18.0.1 and 5.18.1.1
          - { version: '5.18.0.1', flavour: x86_no64bitint }
          - { version: '5.18.1.1', flavour: x86_no64bitint }
          # 32bit / with USE_64_BIT_INT flavour is available from version 5.18.0.1 onwards
          - { version: '5.8.8.2', flavour: x86_64bitint }
          - { version: '5.8.8.3', flavour: x86_64bitint }
          - { version: '5.8.8.4', flavour: x86_64bitint }
          - { version: '5.8.9.1', flavour: x86_64bitint }
          - { version: '5.8.9.2', flavour: x86_64bitint }
          - { version: '5.8.9.3', flavour: x86_64bitint }
          - { version: '5.8.9.4', flavour: x86_64bitint }
          - { version: '5.8.9.5', flavour: x86_64bitint }
          - { version: '5.10.0.2', flavour: x86_64bitint }
          - { version: '5.10.0.3', flavour: x86_64bitint }
          - { version: '5.10.0.4', flavour: x86_64bitint }
          - { version: '5.10.0.5', flavour: x86_64bitint }
          - { version: '5.10.0.6', flavour: x86_64bitint }
          - { version: '5.10.1.0', flavour: x86_64bitint }
          - { version: '5.10.1.1', flavour: x86_64bitint }
          - { version: '5.10.1.2', flavour: x86_64bitint }
          - { version: '5.10.1.3', flavour: x86_64bitint }
          - { version: '5.10.1.4', flavour: x86_64bitint }
          - { version: '5.10.1.5', flavour: x86_64bitint }
          - { version: '5.12.0.0', flavour: x86_64bitint }
          - { version: '5.12.0.1', flavour: x86_64bitint }
          - { version: '5.12.1.0', flavour: x86_64bitint }
          - { version: '5.12.2.0', flavour: x86_64bitint }
          - { version: '5.12.3.0', flavour: x86_64bitint }
          - { version: '5.14.2.1', flavour: x86_64bitint }
          - { version: '5.14.3.1', flavour: x86_64bitint }
          - { version: '5.14.4.1', flavour: x86_64bitint }
          - { version: '5.16.0.1', flavour: x86_64bitint }
          - { version: '5.16.1.1', flavour: x86_64bitint }
          - { version: '5.16.2.1', flavour: x86_64bitint }
          - { version: '5.16.2.2', flavour: x86_64bitint }
          - { version: '5.16.3.1', flavour: x86_64bitint }
          # 64bit flavour is available from version 5.12.3.0 onwards
          - { version: '5.8.8.2', flavour: x64 }
          - { version: '5.8.8.3', flavour: x64 }
          - { version: '5.8.8.4', flavour: x64 }
          - { version: '5.8.9.1', flavour: x64 }
          - { version: '5.8.9.2', flavour: x64 }
          - { version: '5.8.9.3', flavour: x64 }
          - { version: '5.8.9.4', flavour: x64 }
          - { version: '5.8.9.5', flavour: x64 }
          - { version: '5.10.0.2', flavour: x64 }
          - { version: '5.10.0.3', flavour: x64 }
          - { version: '5.10.0.4', flavour: x64 }
          - { version: '5.10.0.5', flavour: x64 }
          - { version: '5.10.0.6', flavour: x64 }
          - { version: '5.10.1.0', flavour: x64 }
          - { version: '5.10.1.1', flavour: x64 }
          - { version: '5.10.1.2', flavour: x64 }
          - { version: '5.10.1.3', flavour: x64 }
          - { version: '5.10.1.4', flavour: x64 }
          - { version: '5.10.1.5', flavour: x64 }
          - { version: '5.12.0.0', flavour: x64 }
          - { version: '5.12.0.1', flavour: x64 }
          - { version: '5.12.1.0', flavour: x64 }
          - { version: '5.12.2.0', flavour: x64 }
          # Versions prior to 5.8.9.3 and 5.10.1.0 do not ship with a copy of OpenSSL
          - { version: '5.8.8.2', flavour: x86_no64bitint }
          - { version: '5.8.8.3', flavour: x86_no64bitint }
          - { version: '5.8.8.4', flavour: x86_no64bitint }
          - { version: '5.8.9.1', flavour: x86_no64bitint }
          - { version: '5.8.9.2', flavour: x86_no64bitint }
          - { version: '5.10.0.2', flavour: x86_no64bitint }
          - { version: '5.10.0.3', flavour: x86_no64bitint }
          - { version: '5.10.0.4', flavour: x86_no64bitint }
          - { version: '5.10.0.5', flavour: x86_no64bitint }
          - { version: '5.10.0.6', flavour: x86_no64bitint }
          # Net-SSLeay support for the version of OpenSSL that ships with 64bit flavours of
          # Strawberry Perl 5.12.3.0 has been withdrawn because it malfunctions - see
          # https://github.com/radiator-software/p5-net-ssleay/issues/189
          - { version: '5.12.3.0', flavour: x64 }
          # Net-SSLeay support for the copies of OpenSSL that ship with 32bit flavours of Strawberry
          # Perl versions between 5.30.0.1 and 5.30.2.1 has been withdrawn because of a build
          # defect - see https://github.com/radiator-software/p5-net-ssleay/issues/179
          - { version: '5.30.0.1', flavour: x86_64bitint }
          - { version: '5.30.0.1', flavour: x86_no64bitint }
          - { version: '5.30.1.1', flavour: x86_64bitint }
          - { version: '5.30.1.1', flavour: x86_no64bitint }
          - { version: '5.30.2.1', flavour: x86_64bitint }
          - { version: '5.30.2.1', flavour: x86_no64bitint }
    steps:
      - name: Download GitHub releases response artifact
        uses: actions/download-artifact@v2
        with:
          name: github-releases

      - name: Get GitHub release details for Strawberry Perl ${{ matrix.version }}
        uses: actions/github-script@v5
        id: release
        env:
          VERSION: ${{ matrix.version }}
          FLAVOUR: ${{ matrix.flavour }}
        with:
          script: |
            const { VERSION, FLAVOUR } = process.env;

            const releases = JSON.parse(require("fs").readFileSync("releases.gh"));

            var r = releases.find(r => r.tag_name == VERSION);
            if (typeof r === "undefined") {
              console.log("No GitHub release found for this version; creating one");

              r = (await github.rest.repos.createRelease({
                owner:            context.repo.owner,
                repo:             context.repo.repo,
                tag_name:         VERSION,
                target_commitish: context.sha,
                name:             `Strawberry Perl ${VERSION}`,
                draft:            false,
                prerelease:       false,
              })).data;
            }

            const prefix = `strawberry-perl-${VERSION}-${FLAVOUR}`;
            const upstream = r.assets.find(a => a.name == `${prefix}.upstream.zip`);
            const minified = r.assets.find(a => a.name == `${prefix}.minified.zip`);

            core.setOutput("release_id", r.id);

            if (typeof upstream !== "undefined") {
              core.setOutput("upstream_asset_id", upstream.id);
              core.setOutput("upstream_asset_url", upstream.browser_download_url);
            }

            if (typeof minified !== "undefined") {
              core.setOutput("minified_asset_id", minified.id);
            }

      - name: Check out ci-strawberry-perl
        uses: actions/checkout@v2

      - name: Check out p5-net-ssleay
        uses: actions/checkout@v2
        with:
          repository: radiator-software/p5-net-ssleay
          ref: master
          path: p5-net-ssleay

      - name: Install Strawberry Perl ${{ matrix.version }} ${{ matrix.flavour }}
        env:
          VERSION: ${{ matrix.version }}
          FLAVOUR: ${{ matrix.flavour }}
          UPSTREAM_URL: ${{ steps.release.outputs.upstream_asset_url }}
        run: |
          if ($Env:UPSTREAM_URL -eq "") {
            $version = [System.Version]$Env:VERSION

            if ($version -lt [System.Version]"5.10.1.0") {
              $dirname = $env:VERSION.Split(".")[0..2] -Join "."
            } else {
              $dirname = $env:VERSION
            }

            $filename = switch ($Env:FLAVOUR) {
              "x64" {
                if ($version -ge [System.Version]"5.12.3.0") {
                  "strawberry-perl-$Env:VERSION-64bit.zip"
                } else {
                  # x64 flavour is not available before 5.12.3.0
                  throw "x64 flavour not available for Strawberry Perl $Env:VERSION"
                }
              }
              "x86_64bitint" {
                if ($version -ge [System.Version]"5.18.0.1") {
                  "strawberry-perl-$Env:VERSION-32bit.zip"
                } else {
                  # x86_64bitint flavour is not available before 5.18.0.1
                  throw "x86_64bitint flavour not available for Strawberry Perl $Env:VERSION"
                }
              }
              "x86_no64bitint" {
                if ($version -le [System.Version]"5.12.3.0") {
                  "strawberry-perl-$Env:VERSION.zip"
                } elseif ($version -lt [System.Version]"5.18.0.1") {
                  # The "-32bit" suffix was added in 5.14.2.1, but denotes the x86_64bitint
                  # flavour from 5.18.0.1 onwards
                  "strawberry-perl-$Env:VERSION-32bit.zip"
                } elseif ($version -ge [System.Version]"5.18.2.1") {
                  # The "-no64-" identifier was added in 5.18.2.1 to differentiate the
                  # x86_64bitint and x86_no64bitint flavours
                  "strawberry-perl-no64-$Env:VERSION-32bit.zip"
                } else {
                  # x86_no64bitint flavour is not available for 5.18.0.1 and 5.18.1.1
                  throw "x86_no64bitint flavour not available for Strawberry Perl $Env:VERSION"
                }
              }
            }
            $url = "https://strawberryperl.com/download/$dirname/$filename"
          } else {
            $url = $Env:UPSTREAM_URL
          }

          Write-Output "Downloading Strawberry Perl from $url"
          
          Invoke-WebRequest `
            -Uri $url `
            -OutFile strawberry.zip

          Expand-Archive `
            -Path strawberry.zip `
            -DestinationPath C:\strawberry

          if (Test-Path -Path C:\strawberry\relocation.pl.bat -PathType Leaf) {
            Write-Output "Relocating Strawberry Perl (C:\strawberry\relocation.pl.bat)"
            C:\strawberry\relocation.pl.bat
          } elseif (Test-Path -Path C:\strawberry\relocation.pl -PathType Leaf) {
            Write-Output "Relocating Strawberry Perl (C:\strawberry\relocation.pl)"
            C:\strawberry\perl\bin\perl.exe C:\strawberry\relocation.pl
          }

      - name: Upload upstream Strawberry Perl ${{ matrix.version }} ${{ matrix.flavour }} archive as release artifact
        if: ${{ steps.release.outputs.upstream_asset_url == null }}
        uses: actions/github-script@v5
        env:
          VERSION: ${{ matrix.version }}
          FLAVOUR: ${{ matrix.flavour }}
          RELEASE_ID: ${{ steps.release.outputs.release_id }}
        with:
          script: |
            const { VERSION, FLAVOUR, RELEASE_ID } = process.env;

            await github.rest.repos.uploadReleaseAsset({
              owner:      context.repo.owner,
              repo:       context.repo.repo,
              release_id: RELEASE_ID,
              name:       `strawberry-perl-${VERSION}-${FLAVOUR}.upstream.zip`,
              data:       require("fs").readFileSync("strawberry.zip"),
            });

      - name: Restore cached Process Monitor executable
        id: procmon
        uses: actions/cache@v2
        with:
          path: Procmon64.exe
          key: procmon

      - name: Download Process Monitor
        if: ${{ steps.procmon.outputs.cache-hit != 'true' }}
        run: |
          if (-not(Test-Path -Path Procmon64.exe -PathType Leaf)) {
            Invoke-WebRequest `
              -Uri https://live.sysinternals.com/Procmon64.exe `
              -OutFile Procmon64.exe
          }

      - name: Run Net-SSLeay test suite
        env:
          VERSION: ${{ matrix.version }}
        run: |
          if ([System.Version]$Env:VERSION -ge [System.Version]"5.26.0.1") {
            $make = "C:\strawberry\c\bin\gmake.exe"
          } else {
            $make = "C:\strawberry\c\bin\dmake.exe"
          }

          $Env:Path = "C:\strawberry\perl\bin;C:\strawberry\c\bin;$Env:Path"

          Start-Process `
            -FilePath Procmon64.exe `
            -ArgumentList "/AcceptEula /LoadConfig strawberry.pmc /BackingFile test.pml /Quiet /Minimized" `
            -NoNewWindow

          Start-Process `
            -FilePath Procmon64.exe `
            -ArgumentList "/AcceptEula /WaitForIdle" `
            -NoNewWindow `
            -Wait

          cd p5-net-ssleay

          $make_in = New-TemporaryFile

          echo n | Out-File `
            -FilePath $make_in `
            -NoNewline

          $proc_makefile = Start-Process `
            -FilePath "C:\strawberry\perl\bin\perl.exe" `
            -ArgumentList "Makefile.PL" `
            -RedirectStandardInput $make_in `
            -NoNewWindow `
            -Wait `
            -PassThru

          if ($proc_makefile.ExitCode -ne 0) {
            throw "`perl Makefile.PL` failed (exit code: $($proc_makefile.ExitCode))"
          }

          $proc_build = Start-Process `
            -FilePath $make `
            -ArgumentList "test" `
            -NoNewWindow `
            -Wait `
            -PassThru

          if ($proc_build.ExitCode -ne 0) {
            throw "`$make test` failed (exit code: $($proc_build.ExitCode))"
          }

          cd ..

          Start-Process `
            -FilePath Procmon64.exe `
            -ArgumentList "/AcceptEula /Terminate" `
            -NoNewWindow `
            -Wait

      - name: Create minified Strawberry Perl ${{ matrix.version }} ${{ matrix.flavour }} archive
        run: |
          Start-Process `
            -FilePath Procmon64.exe `
            -ArgumentList "/AcceptEula /OpenLog test.pml /SaveAs test.csv /Quiet /Minimized" `
            -NoNewWindow `
            -Wait

          # We can't add "Result is SUCCESS => Include" to the Procmon filter list, because this
          # seems to make it discard all file system activity and report only process and thread
          # activity - instead we need to check here whether the path exists (and also is a file,
          # since directory activity is also reported)
          $files = Import-Csv test.csv | Where { Test-Path -Path $_.Path -PathType Leaf } | Foreach { $_.Path } | Sort -Unique
          Write-Output $files

          $files | Foreach {
            $dest = $_ -ireplace "^C:\\strawberry\\", "strawberry-minified\"
            $null = New-Item -Force $dest
            Copy-Item -Path $_ -Destination $dest
          }

          $minified = Compress-Archive `
            -Path strawberry-minified\* `
            -DestinationPath strawberry-minified.zip `
            -CompressionLevel Optimal `
            -PassThru

          Write-Output ("Minified archive is {0} bytes ({1:n2} MB)" -f ($minified.Length, ($minified.Length / 1MB)))

      - name: Delete existing minified Strawberry Perl ${{ matrix.version }} ${{ matrix.flavour }} archive from release artifacts
        if: ${{ steps.release.outputs.minified_asset_id != null }}
        uses: actions/github-script@v5
        env:
          ASSET_ID: ${{ steps.release.outputs.minified_asset_id }}
        with:
          script: |
            await github.rest.repos.deleteReleaseAsset({
              owner:    context.repo.owner,
              repo:     context.repo.repo,
              asset_id: process.env.ASSET_ID,
            });

      - name: Upload minified Strawberry Perl ${{ matrix.version }} ${{ matrix.flavour }} archive as release artifact
        uses: actions/github-script@v5
        env:
          VERSION: ${{ matrix.version }}
          FLAVOUR: ${{ matrix.flavour }}
          RELEASE_ID: ${{ steps.release.outputs.release_id }}
        with:
          script: |
            const { VERSION, FLAVOUR, RELEASE_ID } = process.env;

            await github.rest.repos.uploadReleaseAsset({
              owner:      context.repo.owner,
              repo:       context.repo.repo,
              release_id: RELEASE_ID,
              name:       `strawberry-perl-${VERSION}-${FLAVOUR}.minified.zip`,
              data:       require("fs").readFileSync("strawberry-minified.zip"),
            });
